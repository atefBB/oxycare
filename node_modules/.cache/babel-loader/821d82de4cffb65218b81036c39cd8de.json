{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/projects/oxycare/src/styles/theme/ThemeProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { ThemeProvider as OriginalThemeProvider } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useThemeSlice } from './slice';\nimport { selectTheme } from './slice/selectors';\nexport const ThemeProvider = props => {\n  _s();\n\n  useThemeSlice();\n  const theme = useSelector(selectTheme);\n  return /*#__PURE__*/React.createElement(OriginalThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.Children.only(props.children));\n};\n\n_s(ThemeProvider, \"ul0H5dnRTkSxNj2rA3ZMXrMZv0k=\", false, function () {\n  return [useThemeSlice, useSelector];\n});\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/mohamed/Desktop/projects/oxycare/src/styles/theme/ThemeProvider.tsx"],"names":["React","ThemeProvider","OriginalThemeProvider","useSelector","useThemeSlice","selectTheme","props","theme","Children","only","children"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAa,IAAIC,qBAA1B,QAAuD,mBAAvD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAO,MAAMJ,aAAa,GAAIK,KAAD,IAA2C;AAAA;;AACtEF,EAAAA,aAAa;AAEb,QAAMG,KAAK,GAAGJ,WAAW,CAACE,WAAD,CAAzB;AACA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBH,KAAK,CAACI,QAA1B,CADH,CADF;AAKD,CATM;;GAAMT,a;UACXG,a,EAEcD,W;;;KAHHF,a","sourcesContent":["import * as React from 'react';\nimport { ThemeProvider as OriginalThemeProvider } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useThemeSlice } from './slice';\nimport { selectTheme } from './slice/selectors';\n\nexport const ThemeProvider = (props: { children: React.ReactChild }) => {\n  useThemeSlice();\n\n  const theme = useSelector(selectTheme);\n  return (\n    <OriginalThemeProvider theme={theme}>\n      {React.Children.only(props.children)}\n    </OriginalThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}