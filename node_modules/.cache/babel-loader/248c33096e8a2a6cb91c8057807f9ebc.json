{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/home/mohamed/Desktop/projects/oxycare/src/app/pages/HomePage/Features/GithubRepoForm/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel } from 'app/components/FormLabel';\nimport { Input } from './components/Input';\nimport { TextButton } from './components/TextButton';\nimport { selectUsername, selectRepos, selectLoading, selectError } from './slice/selectors';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\nimport { RepoErrorType } from './slice/types';\nimport { useGithubRepoFormSlice } from './slice';\nexport function GithubRepoForm() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    actions\n  } = useGithubRepoFormSlice();\n  const username = useSelector(selectUsername);\n  const repos = useSelector(selectRepos);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = evt => {\n    dispatch(actions.changeUsername(evt.currentTarget.value));\n    dispatch(actions.loadRepos());\n  };\n\n  const useEffectOnMount = effect => {\n    _s();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, []);\n  };\n\n  _s(useEffectOnMount, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  useEffectOnMount(() => {\n    // When initial state username is not null, submit the form to load repos\n    if (username && username.trim().length > 0) {\n      dispatch(actions.loadRepos());\n    }\n  });\n\n  const onSubmitForm = evt => {\n    /* istanbul ignore next  */\n    if (evt !== undefined && evt.preventDefault) {\n      evt.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"\\u0623\\u0643\\u062A\\u0628 \\u0627\\u0644\\u0631\\u0651\\u0642\\u0645\"), /*#__PURE__*/React.createElement(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"+216 99 999 999\",\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(LoadingIndicator, {\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))));\n}\n\n_s2(GithubRepoForm, \"Ma5QRdkhE0ckT0eIE1NRmfmWww4=\", true, function () {\n  return [useGithubRepoFormSlice, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = GithubRepoForm;\nexport const repoErrorText = error => {\n  switch (error) {\n    case RepoErrorType.USERNAME_EMPTY:\n      return 'لازمك تكتب رقم';\n\n    default:\n      return 'An error has occurred!';\n  }\n};\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__Wrapper\",\n  componentId: \"sc-1mzkxh6-0\"\n})([\"\", \"{margin:16px 0;font-size:0.875rem;}\"], TextButton);\n\nconst InputWrapper = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__InputWrapper\",\n  componentId: \"sc-1mzkxh6-1\"\n})([\"display:flex;align-items:center;\", \"{width:\", \"%;margin-right:0.5rem;}\"], Input, 100 / 3);\n\nconst ErrorText = _styled.span.withConfig({\n  displayName: \"GithubRepoForm__ErrorText\",\n  componentId: \"sc-1mzkxh6-2\"\n})([\"color:\", \";\"], p => p.theme.text);\n\nconst FormGroup = _styled.form.withConfig({\n  displayName: \"GithubRepoForm__FormGroup\",\n  componentId: \"sc-1mzkxh6-3\"\n})([\"display:flex;flex-direction:column;margin-bottom:1rem;\", \"{margin-bottom:0.25rem;margin-left:0.125rem;}\"], FormLabel);\n\nconst List = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__List\",\n  componentId: \"sc-1mzkxh6-4\"\n})([\"\"]);\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubRepoForm\");","map":{"version":3,"sources":["/home/mohamed/Desktop/projects/oxycare/src/app/pages/HomePage/Features/GithubRepoForm/index.tsx"],"names":["React","useEffect","useSelector","useDispatch","FormLabel","Input","TextButton","selectUsername","selectRepos","selectLoading","selectError","LoadingIndicator","RepoErrorType","useGithubRepoFormSlice","GithubRepoForm","actions","username","repos","isLoading","error","dispatch","onChangeUsername","evt","changeUsername","currentTarget","value","loadRepos","useEffectOnMount","effect","trim","length","onSubmitForm","undefined","preventDefault","repoErrorText","USERNAME_EMPTY","Wrapper","styled","div","InputWrapper","ErrorText","span","p","theme","text","FormGroup","form","List"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel } from 'app/components/FormLabel';\nimport { Input } from './components/Input';\nimport { RepoItem } from './RepoItem';\nimport { TextButton } from './components/TextButton';\nimport {\n  selectUsername,\n  selectRepos,\n  selectLoading,\n  selectError,\n} from './slice/selectors';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\nimport { RepoErrorType } from './slice/types';\nimport { useGithubRepoFormSlice } from './slice';\n\nexport function GithubRepoForm() {\n  const { actions } = useGithubRepoFormSlice();\n\n  const username = useSelector(selectUsername);\n  const repos = useSelector(selectRepos);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.changeUsername(evt.currentTarget.value));\n    dispatch(actions.loadRepos());\n  };\n\n  const useEffectOnMount = (effect: React.EffectCallback) => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, []);\n  };\n\n  useEffectOnMount(() => {\n    // When initial state username is not null, submit the form to load repos\n    if (username && username.trim().length > 0) {\n      dispatch(actions.loadRepos());\n    }\n  });\n\n  const onSubmitForm = (evt?: React.FormEvent<HTMLFormElement>) => {\n    /* istanbul ignore next  */\n    if (evt !== undefined && evt.preventDefault) {\n      evt.preventDefault();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <FormGroup onSubmit={onSubmitForm}>\n        <FormLabel>أكتب الرّقم</FormLabel>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            placeholder=\"+216 99 999 999\"\n            value={username}\n            onChange={onChangeUsername}\n          />\n          {isLoading && <LoadingIndicator small />}\n        </InputWrapper>\n      </FormGroup>\n      \n    </Wrapper>\n  );\n}\n\nexport const repoErrorText = (error: RepoErrorType) => {\n  switch (error) {\n    case RepoErrorType.USERNAME_EMPTY:\n      return 'لازمك تكتب رقم';\n    default:\n      return 'An error has occurred!';\n  }\n};\n\nconst Wrapper = styled.div`\n  ${TextButton} {\n    margin: 16px 0;\n    font-size: 0.875rem;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${Input} {\n    width: ${100 / 3}%;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst ErrorText = styled.span`\n  color: ${p => p.theme.text};\n`;\n\nconst FormGroup = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n\n  ${FormLabel} {\n    margin-bottom: 0.25rem;\n    margin-left: 0.125rem;\n  }\n`;\n\nconst List = styled.div``;\n"]},"metadata":{},"sourceType":"module"}